var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "RegistrationView", function () {
    return RegistrationView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactRouterDom = require("react-router-dom");
  var _reactBootstrapForm = require('react-bootstrap/Form');
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrapRow = require('react-bootstrap/Row');
  var _reactBootstrapRowDefault = _parcelHelpers.interopDefault(_reactBootstrapRow);
  var _reactBootstrapCol = require('react-bootstrap/Col');
  var _reactBootstrapColDefault = _parcelHelpers.interopDefault(_reactBootstrapCol);
  require('./registration-view.scss');
  var _jsxFileName = "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx", _s = $RefreshSig$();
  function RegistrationView(props) {
    _s();
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const [birthday, setBirthday] = _react.useState('');
    const [usernameError, setUsernameError] = _react.useState({});
    const [passwordError, setPasswordError] = _react.useState({});
    const [emailError, setEmailError] = _react.useState({});
    const [birthdayError, setBirthdayError] = _react.useState({});
    const handleSubmit = e => {
      e.preventDefault();
      let setisValid = formValidation();
      // console.log(username, password, email, birthday);
      if (setisValid) {
        _axiosDefault.default.post('https://myflix-movie-api-2312.herokuapp.com/users', {
          Username: username,
          Password: password,
          Email: email,
          Birthday: birthday
        }).then(response => {
          const data = response.data;
          console.log(data);
          window.open('/', '_self');
        }).catch(e => {
          console.log('error registering the user');
        });
      }
      ;
    };
    const formValidation = () => {
      let usernameError = {};
      let passwordError = {};
      let emailError = {};
      let birthdayError = {};
      let isValid = true;
      if (username.trim().length < 5) {
        usernameError.usernameShort = "Username be alphanumeric characters only and contains at least 5 characters";
        isValid = false;
      }
      if (password.trim().length < 3) {
        passwordError.passwordMissing = "You must enter a password.(minimum 4 characters) ";
        isValid = false;
      }
      if (!(email && email.includes(".") && this.state.Email.includes("@"))) {
        emailError.emailNotEmail = "A valid email address is required.";
        isValid = false;
      }
      if (birthday === '') {
        birthdayError.birthdayEmpty = "Please enter your birthday.";
        isValid = false;
      }
      setUsernameError(usernameError);
      setPasswordError(passwordError);
      setEmailError(emailError);
      setBirthdayError(birthdayError);
      return isValid;
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "reg-page",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 80,
          columnNumber: 5
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
        className: "justify-content-md-center",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 82,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
        md: 6,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 83,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
        id: "reg-form",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 84,
          columnNumber: 11
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formUsername",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 85,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 86,
          columnNumber: 15
        }
      }, "Username: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        onChange: e => setUsername(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 87,
          columnNumber: 15
        }
      }), Object.keys(usernameError).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: red
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 90,
              columnNumber: 19
            }
          }, usernameError[key])
        );
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formPassword",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 96,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 97,
          columnNumber: 15
        }
      }, "Password: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        onChange: e => setPassword(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 98,
          columnNumber: 15
        }
      }), Object.keys(passwordError).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 101,
              columnNumber: 19
            }
          }, passwordError[key])
        );
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formEmail",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 107,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 108,
          columnNumber: 15
        }
      }, "Email: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        onChange: e => setEmail(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 109,
          columnNumber: 15
        }
      }), Object.keys(emailError).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 112,
              columnNumber: 19
            }
          }, emailError[key])
        );
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formBirthday",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 118,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 119,
          columnNumber: 15
        }
      }, "Birthday: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "date",
        onChange: e => setBirthday(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 120,
          columnNumber: 15
        }
      }), Object.keys(birthdayError).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 123,
              columnNumber: 19
            }
          }, birthdayError[key])
        );
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "outline-warning",
        type: "button",
        onClick: handleSubmit,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 129,
          columnNumber: 13
        }
      }, "Submit"), " ", '', " ", '', /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
        to: `/`,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 130,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "outline-light",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 131,
          columnNumber: 15
        }
      }, "Back to Login"))))))
    );
  }
  _s(RegistrationView, "D9pKIZXlzFraV1trOfvISh+BvV4=");
  _c = RegistrationView;
  RegistrationView.propTypes = {
    onRegister: _propTypesDefault.default.func.isRequired
  };
  var _c;
  $RefreshReg$(_c, "RegistrationView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
