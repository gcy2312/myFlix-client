var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RegistrationView", ()=>RegistrationView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRouterDom = require("react-router-dom");
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _row = require("react-bootstrap/Row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _col = require("react-bootstrap/Col");
var _colDefault = parcelHelpers.interopDefault(_col);
var _registrationViewScss = require("./registration-view.scss");
var _s = $RefreshSig$();
function RegistrationView(props) {
    _s();
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const [birthday, setBirthday] = _react.useState('');
    const [usernameError, setUsernameError] = _react.useState({
    });
    const [passwordError, setPasswordError] = _react.useState({
    });
    const [emailError, setEmailError] = _react.useState({
    });
    const [birthdayError, setBirthdayError] = _react.useState({
    });
    const handleSubmit = (e)=>{
        e.preventDefault();
        let setisValid = formValidation();
        // console.log(username, password, email, birthday);
        if (setisValid) _axiosDefault.default.post('https://myflix-movie-api-2312.herokuapp.com/users', {
            Username: username,
            Password: password,
            Email: email,
            Birthday: birthday
        }).then((response)=>{
            const data = response.data;
            console.log(data);
            window.open('/', '_self'); // the second argument '_self' is necessary so that the page will open in the current tab
        }).catch((e1)=>{
            console.log('error registering the user');
        });
    };
    const formValidation = ()=>{
        let usernameError1 = {
        };
        let passwordError1 = {
        };
        let emailError1 = {
        };
        let birthdayError1 = {
        };
        let isValid = true;
        if (username.trim().length < 5) {
            usernameError1.usernameShort = "Username be alphanumeric characters only and contains at least 5 characters";
            isValid = false;
        }
        if (password.trim().length < 3) {
            passwordError1.passwordMissing = "You must enter a password.(minimum 4 characters) ";
            isValid = false;
        }
        if (!(email && email.includes(".") && email.includes("@"))) {
            emailError1.emailNotEmail = "A valid email address is required.";
            isValid = false;
        }
        if (birthday === '') {
            birthdayError1.birthdayEmpty = "Please enter your birthday.";
            isValid = false;
        }
        setUsernameError(usernameError1);
        setPasswordError(passwordError1);
        setEmailError(emailError1);
        setBirthdayError(birthdayError1);
        return isValid;
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        id: "reg-page",
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 80
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
        className: "justify-content-md-center",
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 82
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
        md: 6,
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 83
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default, {
        id: "reg-form",
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 84
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formUsername",
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 85
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 86
        },
        __self: this
    }, "Username: "), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        onChange: (e)=>setUsername(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 87
        },
        __self: this
    }), Object.keys(usernameError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            style: {
                color: red
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
                lineNumber: 90
            },
            __self: this
        }, usernameError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formPassword",
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 96
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 97
        },
        __self: this
    }, "Password: "), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        onChange: (e)=>setPassword(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 98
        },
        __self: this
    }), Object.keys(passwordError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            style: {
                color: "red"
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
                lineNumber: 101
            },
            __self: this
        }, passwordError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formEmail",
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 107
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 108
        },
        __self: this
    }, "Email: "), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        onChange: (e)=>setEmail(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 109
        },
        __self: this
    }), Object.keys(emailError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            style: {
                color: "red"
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
                lineNumber: 112
            },
            __self: this
        }, emailError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formBirthday",
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 118
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 119
        },
        __self: this
    }, "Birthday: "), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "date",
        onChange: (e)=>setBirthday(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 120
        },
        __self: this
    }), Object.keys(birthdayError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            style: {
                color: "red"
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
                lineNumber: 123
            },
            __self: this
        }, birthdayError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "outline-warning",
        type: "button",
        onClick: handleSubmit,
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 129
        },
        __self: this
    }, "Submit"), " ", '', " ", '', /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
        to: `/`,
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 130
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "outline-light",
        __source: {
            fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 131
        },
        __self: this
    }, "Back to Login")))))));
}
_s(RegistrationView, "D9pKIZXlzFraV1trOfvISh+BvV4=");
_c = RegistrationView;
RegistrationView.propTypes = {
    onRegister: _propTypesDefault.default.func.isRequired
};
var _c;
$RefreshReg$(_c, "RegistrationView");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}