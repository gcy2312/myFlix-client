var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ProfileView", ()=>ProfileView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRedux = require("react-redux");
var _actions = require("../../actions/actions");
var _reactRouterDom = require("react-router-dom");
var _reactBootstrap = require("react-bootstrap");
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _col = require("react-bootstrap/Col");
var _colDefault = parcelHelpers.interopDefault(_col);
var _row = require("react-bootstrap/Row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _trashSvg = require("url:../../img/trash.svg");
var _trashSvgDefault = parcelHelpers.interopDefault(_trashSvg);
var _profileViewScss = require("./profile-view.scss");
class ProfileView extends _reactDefault.default.Component {
    constructor(props){
        super(props);
        this.state = {
            validated: null
        };
        console.log('Profile View Loaded');
        this.handleUpdate = this.handleUpdate.bind(this);
    }
    handleUpdate(e, newUsername, newPassword, newEmail, newBirthday) {
        this.setState({
            validated: null
        });
        const form = e.currentTarget;
        if (form.checkValidity() === false) {
            e.preventDefault();
            e.stopPropagation();
            this.props.setUser();
            // this.setState({
            //   validated: true,
            // });
            return;
        }
        e.preventDefault();
        const token = localStorage.getItem('token');
        const user = localStorage.getItem('user');
        const url = 'https://myflix-movie-api-2312.herokuapp.com/users/';
        _axiosDefault.default({
            method: 'put',
            url: url + user,
            headers: {
                Authorization: `Bearer ${token}`
            },
            data: {
                Username: newUsername ? newUsername : this.state.Username,
                Password: newPassword ? newPassword : this.state.Password,
                Email: newEmail ? newEmail : this.state.Email,
                Birthday: newBirthday ? newBirthday : this.state.Birthday
            }
        }).then((response)=>{
            this.setState({
                Username: response.data.Username,
                Password: response.data.Password,
                Email: response.data.Email,
                Birthday: response.data.Birthday
            });
            alert(this.state.Username + ' changes have been saved!');
            localStorage.setItem('user', this.state.Username);
        }).catch(function(error) {
            console.log(error);
        });
    }
    setUsername(input) {
        this.Username = input;
    }
    setPassword(input) {
        this.Password = input;
    }
    setEmail(input) {
        this.Email = input;
    }
    setBirthday(input) {
        this.Birthday = input;
    }
    removeFavorite(movie) {
        const token = localStorage.getItem("token");
        _axiosDefault.default.delete("https://myflix-movie-api-2312.herokuapp.com/users/" + localStorage.getItem("user") + "/favorites/" + movie._id, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            console.log(response);
            this.props.setUser(response.data);
            alert(movie.Title + " has been removed from your Favorites.");
        });
    }
    handleDelete() {
        const token = localStorage.getItem("token");
        const user = localStorage.getItem("user");
        _axiosDefault.default.delete(`https://myflix-movie-api-2312.herokuapp.com/users/${user}`, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then(()=>{
            alert(user + " account has been deleted.");
            localStorage.removeItem("user");
            localStorage.removeItem("token");
            window.location.pathname = "/";
        }).catch(function(error) {
            console.log(error);
        });
    }
    render() {
        const { movies , user , setUser  } = this.props;
        const { validated  } = this.state;
        const FavoriteMovieList = movies.filter((movie)=>{
            return user.FavoriteMovies.includes(movie._id);
        });
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "flexWrap",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 137
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 138
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
            md: 6,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 139
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            id: "userForm",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 141
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default, {
            noValidate: true,
            validated: validated,
            className: "update-form",
            onSubmit: (e)=>this.handleUpdate(e, this.Username, this.Password, this.Email, this.Birthday)
            ,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 143
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("h4", {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 145
            },
            __self: this
        }, "Update your Profile"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
            controlId: "BasicUsername",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 146
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 147
            },
            __self: this
        }, "Username:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
            type: "text",
            placeholder: user.Username,
            autoComplete: "username",
            onChange: (e)=>this.setUsername(e.target.value)
            ,
            pattern: "[a-zA-Z0-9]{5,}",
            minLength: "5",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 148
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control.Feedback, {
            type: "invalid",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 154
            },
            __self: this
        }, "Enter a Username with at least 5 characters (no speacial characters)")), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
            controlId: "BasicPassword",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 156
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 157
            },
            __self: this
        }, "Password:*"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
            type: "password",
            placeholder: "Enter current or new Password",
            autoComplete: "password",
            onChange: (e)=>this.setPassword(e.target.value)
            ,
            minLength: "5",
            required: true,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 158
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control.Feedback, {
            type: "invalid",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 162
            },
            __self: this
        }, "Enter a valid password with at least 5 characters")), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
            controlId: "BasicEmail",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 164
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 165
            },
            __self: this
        }, "Email:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
            type: "email",
            placeholder: user.Email,
            autoComplete: "email",
            onChange: (e)=>this.setEmail(e.target.value)
            ,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 166
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control.Feedback, {
            type: "invalid",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 170
            },
            __self: this
        }, "Please enter a valid email address.")), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
            controlId: "BasicBirthday",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 172
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 173
            },
            __self: this
        }, "Birthday:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
            type: "date",
            onChange: (e)=>this.setBirthday(e.target.value)
            ,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 174
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control.Feedback, {
            type: "invalid",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 176
            },
            __self: this
        }, "Please enter a valid date.")), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            variant: "outline-warning",
            block: true,
            type: "submit",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 178
            },
            __self: this
        }, "Update")), /*#__PURE__*/ _reactDefault.default.createElement("br", {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 181
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            variant: "outline-warning",
            block: true,
            onClick: ()=>this.handleDelete()
            ,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 182
            },
            __self: this
        }, "Delete Account"), /*#__PURE__*/ _reactDefault.default.createElement("br", {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 183
            },
            __self: this
        }))), /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
            md: 6,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 193
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            id: "favoriteMovies",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 195
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("h4", {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 197
            },
            __self: this
        }, "Your Favorite Movies:"), FavoriteMovieList.map((movie)=>{
            return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card, {
                id: "card",
                className: "movie-card mb-2",
                text: "white",
                __source: {
                    fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 200
                },
                __self: this
            }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Img, {
                variant: "top",
                src: movie.PosterPath,
                __source: {
                    fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 201
                },
                __self: this
            }), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Body, {
                __source: {
                    fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 202
                },
                __self: this
            }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
                to: `/movies/${movie._id}`,
                id: "link",
                __source: {
                    fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 203
                },
                __self: this
            }, movie.Title), /*#__PURE__*/ _reactDefault.default.createElement("button", {
                type: "button",
                className: "btn btn-white btn-rounded mr-md-3 z-depth-1a",
                __source: {
                    fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 206
                },
                __self: this
            }, /*#__PURE__*/ _reactDefault.default.createElement("img", {
                id: "trash-img",
                alt: "",
                src: _trashSvgDefault.default,
                width: "20",
                height: "20",
                fluid: "true",
                onClick: ()=>this.removeFavorite(movie)
                ,
                __source: {
                    fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx",
                    lineNumber: 207
                },
                __self: this
            })))));
        }))))));
    }
}
ProfileView.propType = {
    movies: _propTypesDefault.default.array.isRequired
};
let mapStateToProps = (state)=>{
    return {
        movies: state.movies,
        user: state.user
    };
};
exports.default = _reactRedux.connect(mapStateToProps, {
    setUser: _actions.setUser
})(ProfileView);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}