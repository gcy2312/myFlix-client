var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "ProfileView", function () {
    return ProfileView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('prop-types');
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactRouterDom = require("react-router-dom");
  var _reactBootstrap = require('react-bootstrap');
  var _reactBootstrapContainer = require("react-bootstrap/Container");
  var _reactBootstrapContainerDefault = _parcelHelpers.interopDefault(_reactBootstrapContainer);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrapForm = require("react-bootstrap/Form");
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapCol = require("react-bootstrap/Col");
  var _reactBootstrapColDefault = _parcelHelpers.interopDefault(_reactBootstrapCol);
  require("react-bootstrap/Row");
  var _jsxFileName = "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx";
  class ProfileView extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
      this.state = {
        Username: "",
        Password: "",
        Email: "",
        Birthday: "",
        FavoriteMovies: [],
        UsernameError: "",
        PasswordError: "",
        EmailError: "",
        BirthdayError: ""
      };
    }
    componentDidMount() {
      let accessToken = localStorage.getItem("token");
      this.getUser(accessToken);
    }
    getUser(token) {
      _axiosDefault.default.get('https://myflix-movie-api-2312.herokuapp.com/users/' + localStorage.getItem("user"), {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        this.setState({
          Username: response.data.Username,
          // Password: response.data.Password,
          Email: response.data.Email,
          Birthday: response.data.Birthday,
          FavoriteMovies: response.data.FavoriteMovies
        });
      }).catch(function (err) {
        console.log(err);
      });
    }
    removeFavorite(movie) {
      const token = local.Storage.getItem("token");
      const url = "https://myflix-movie-api-2312.herokuapp.com/users/" + localStorage.getItem("user") + "/movies/" + movie._id;
      _axiosDefault.default.delete(url, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        console.log(response);
        this.componentDidMount();
        alert(movie.Title + "has been removed from Favorites.");
      });
    }
    handleDelete() {
      const token = localStorage.getItem("token");
      const user = localStorage.getItem("user");
      _axiosDefault.default.delete(`https://myflix-movie-api-2312.herokuapp.com/users/${user}`, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(() => {
        alert(user + " account has been deleted.");
        localStorage.removeItem("user");
        localStorage.removeItem("token");
        window.location.pathname = "/";
      }).catch(function (error) {
        console.log(error);
      });
    }
    handleUpdate(e) {
      let token = localStorage.getItem("token");
      let user = localStorage.getItem("user");
      console.log(this.state);
      let setisValid = this.formValidation();
      if (setisValid) {
        _axiosDefault.default.put('https://myflix-movie-api-2312.herokuapp.com/users/${user}', {
          Username: this.state.Username,
          Password: this.state.Password,
          Email: this.state.Email,
          Birthday: this.state.Birthday
        }, {
          headers: {
            Authorization: `Bearer ${token}`
          }
        }).then(res => {
          const data = response.data;
          localStorage.setItem("user", data.Username);
          console.log(data);
          alert(user + "account has been updated.");
          console.log(res);
        }).catch(function (err) {
          console.log(err.res.data);
        });
      }
    }
    formValidation() {
      let UsernameError = {};
      let EmailError = {};
      let PasswordError = {};
      let BirthdayError = {};
      let isValid = true;
      if (this.state.Username.trim().length < 5) {
        UsernameError.usernameShort = "Username be alphanumeric characters only and contains at least 5 characters";
        isValid = false;
      }
      if (this.state.Password.trim().length < 3) {
        PasswordError.passwordMissing = "You must enter a password.(minimum 4 characters) ";
        isValid = false;
      }
      if (!(this.state.Email && this.state.Email.includes(".") && this.state.Email.includes("@"))) {
        EmailError.emailNotEmail = "A valid email address is required.";
        isValid = false;
      }
      if (this.state.birthday === '') {
        BirthdateError.birthdayEmpty = "Please enter your birthdate.";
        isValid = false;
      }
      this.setState({
        UsernameError: UsernameError,
        PasswordError: PasswordError,
        EmailError: EmailError,
        // ConfirmPasswordError: ConfirmPasswordError,
        BirthdayError: BirthdayError
      });
      return isValid;
    }
    handleChange(e) {
      let {name, value} = e.target;
      this.setState({
        [name]: value
      });
    }
    render() {
      const {movies} = this.props;
      const {UsernameError, EmailError, PasswordError, BirthdayError} = this.state;
      const FavoriteMoviesList = movies.filter(movie => {
        return this.state.FavoriteMovies.includes(movie._id);
      });
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          style: {
            display: "inline-block"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 155,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapContainerDefault.default, {
          id: "userForm",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 156,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
          md: 5,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 157,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
          className: "profile-details-form",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 158,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h4", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 159,
            columnNumber: 15
          }
        }, "User Profile:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formUsername",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 160,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 161,
            columnNumber: 17
          }
        }, "Username:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "text",
          name: "Username",
          value: this.state.Username,
          onChange: e => this.handleChange(e),
          placeholder: "Change Username",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 162,
            columnNumber: 17
          }
        }), Object.keys(UsernameError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: red
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 165,
                columnNumber: 21
              }
            }, UsernameError[key])
          );
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Text, {
          id: "usernameHelpBlock",
          muted: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 170,
            columnNumber: 17
          }
        }, "Username must be a minimum of 5 characters")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formPassword",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 174,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 175,
            columnNumber: 17
          }
        }, "Password: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          type: "password",
          name: "Password",
          value: this.state.Password,
          onChange: e => this.handleChange(e),
          placeholder: "Change Your Password",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 176,
            columnNumber: 17
          }
        }), Object.keys(PasswordError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 179,
                columnNumber: 21
              }
            }, PasswordError[key])
          );
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Text, {
          id: "passwordHelpBlock",
          muted: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 184,
            columnNumber: 17
          }
        }, "Password must be a minimum of 4 characters")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formEmail",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 188,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 189,
            columnNumber: 17
          }
        }, "Email:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "text",
          name: "Email",
          value: this.state.Email,
          onChange: e => this.handleChange(e),
          placeholder: "john.doe@email.com",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 190,
            columnNumber: 17
          }
        }), Object.keys(EmailError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 193,
                columnNumber: 21
              }
            }, PasswordError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formBirthday",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 199,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 200,
            columnNumber: 17
          }
        }, "Brithday:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "date",
          name: "Birthday",
          value: this.state.Birthday,
          onChange: e => this.handleChange(e),
          placeholder: "Update Birthday",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 201,
            columnNumber: 17
          }
        }), Object.keys(BirthdayError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 204,
                columnNumber: 21
              }
            }, BirthdayError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: '/users/${this.state.Username}',
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 210,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          type: "link",
          block: true,
          onClick: e => this.handleUpdate(e),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 211,
            columnNumber: 17
          }
        }, "Save Changes"))))), /*#__PURE__*/_reactDefault.default.createElement("div", {
          id: "favoriteMovies",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 217,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
          md: 4,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 218,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Text, {
          as: "h4",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 219,
            columnNumber: 13
          }
        }, "Your Favorite Movies"), FavoriteMoviesList.map(movie => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
              key: movie._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 222,
                columnNumber: 17
              }
            }, /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: movie._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 223,
                columnNumber: 19
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card, {
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 224,
                columnNumber: 21
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Img, {
              src: movie.ImagePath,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 225,
                columnNumber: 23
              }
            }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Body, {
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 226,
                columnNumber: 23
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
              to: '/movies/${movie._id}',
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 227,
                columnNumber: 25
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Title, {
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 228,
                columnNumber: 27
              }
            }, movie.Title)))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
              onClick: () => this.removeFavorite(movie),
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 232,
                columnNumber: 21
              }
            }, "Remove")))
          );
        }))), /*#__PURE__*/_reactDefault.default.createElement("div", {
          id: "delete-account",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 239,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          block: true,
          onClick: () => this.handleDelete(),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 240,
            columnNumber: 11
          }
        }, "Delete Account")))
      );
    }
  }
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
