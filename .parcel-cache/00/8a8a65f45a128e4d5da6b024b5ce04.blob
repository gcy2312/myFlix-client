var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MainView", ()=>MainView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRedux = require("react-redux");
var _reactRouterDom = require("react-router-dom");
var _actions = require("../../actions/actions");
var _moviesList = require("../movies-list/movies-list");
var _moviesListDefault = parcelHelpers.interopDefault(_moviesList);
var _loginView = require("../login-view/login-view");
var _registrationView = require("../registration-view/registration-view");
var _movieView = require("../movie-view/movie-view");
var _directorView = require("../director-view/director-view");
var _genreView = require("../genre-view/genre-view");
var _profileView = require("../profile-view/profile-view");
var _profileViewDefault = parcelHelpers.interopDefault(_profileView);
var _row = require("react-bootstrap/Row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _col = require("react-bootstrap/Col");
var _colDefault = parcelHelpers.interopDefault(_col);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _reactBootstrap = require("react-bootstrap");
var _mainViewScss = require("./main-view.scss");
var _videoSvg = require("url:../../img/video.svg");
var _videoSvgDefault = parcelHelpers.interopDefault(_videoSvg);
class MainView extends _reactDefault.default.Component {
    constructor(props){
        super(props);
        this.state = {
            user: null,
            register: false
        };
    }
    componentDidMount() {
        let accessToken = localStorage.getItem('token');
        if (accessToken !== null) {
            this.getUsers(accessToken, localStorage.getItem('user'));
            this.getMovies(accessToken);
        }
    }
    getUsers(token, username) {
        const url = "https://myflix-movie-api-2312.herokuapp.com/users/" + username;
        _axiosDefault.default.get(url, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            //assign the result to this state
            this.props.setUser(response.data);
        }).catch(function(error) {
            console.log(error);
        });
    }
    getMovies(token) {
        _axiosDefault.default.get('https://myflix-movie-api-2312.herokuapp.com/movies', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            this.props.setMovies(response.data);
        }).catch(function(error) {
            console.log(error);
        });
    }
    //when user successfully logs in - function updates 'user' property in state to that particular user - keep authData in localStorage//
    onLoggedIn(authData) {
        console.log(authData);
        this.props.setUser(authData.user);
        localStorage.setItem('token', authData.token);
        localStorage.setItem('user', authData.user.Username);
        this.getMovies(authData.token);
    }
    onLoggedOut() {
        localStorage.removeItem('token');
        localStorage.removeItem('user');
        this.setState({
            user: null
        });
    }
    onRegister(register) {
        this.setState({
            register
        });
    }
    render() {
        let { movies , user  } = this.props;
        console.log("render", user);
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 104
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view justify-content-md-center",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 105
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar, {
            className: "mb-5",
            id: "myFlixNav",
            variant: "dark",
            expand: "lg",
            sticky: "top",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 106
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar.Brand, {
            id: "appName",
            href: "#home",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 108
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("img", {
            alt: "",
            src: _videoSvgDefault.default,
            width: "50",
            height: "50",
            className: "d-inline-block align-top",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 109
            },
            __self: this
        }), ' ', "myFlix"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar.Toggle, {
            id: "toggle",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 117
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Navbar.Collapse, {
            id: "toggle",
            className: "justify-content-end",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 118
            },
            __self: this
        }, !user ? /*#__PURE__*/ _reactDefault.default.createElement("ul", {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 120
            },
            __self: this
        }) : /*#__PURE__*/ _reactDefault.default.createElement("ul", {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 124
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: '/users/${users}',
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 125
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            id: "link",
            variant: "link",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 126
            },
            __self: this
        }, "My Account")), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: '/',
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 128
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            id: "link",
            variant: "link",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 129
            },
            __self: this
        }, "Movies")), '', /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: '/',
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 131
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            id: "logout",
            variant: "outline-warning",
            onClick: ()=>this.onLoggedOut()
            ,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 132
            },
            __self: this
        }, "Log Out"))))), /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
            className: "main-view justify-content-md-center",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 139
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_moviesListDefault.default, {
                    movies: movies,
                    user: user
                }));
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 140
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/register",
            render: ()=>{
                if (user) return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Redirect, {
                    to: "/"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_registrationView.RegistrationView, {
                    onRegister: (register)=>this.onRegister(register)
                })));
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 148
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/movies/:movieId",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                    ,
                    toggleRegister: this.toggleRegister
                })));
                if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m._id === match.params.movieId
                    ),
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 155
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/genres/:name",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 5
                }, /*#__PURE__*/ _reactDefault.default.createElement(_genreView.GenreView, {
                    genre: movies.find((m)=>m.Genre.Name === match.params.name
                    ).Genre,
                    movies: movies,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 166
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/directors/:name",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                    ,
                    toggleRegister: this.toggleRegister
                })));
                if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_directorView.DirectorView, {
                    director: movies.find((m)=>m.Director.Name === match.params.name
                    ).Director,
                    movies: movies,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 181
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/users/:username",
            render: ({ history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 12
                }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                    ,
                    toggleRegister: this.toggleRegister
                })));
                if (!movies) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_profileViewDefault.default, {
                    user: user,
                    movies: movies,
                    // movie={movies.find(m => m._id === match.params.movieId)}
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 196
            },
            __self: this
        })))));
    }
}
let mapStateToProps = (state)=>{
    return {
        movies: state.movies,
        user: state.user
    };
};
exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actions.setMovies,
    setUser: _actions.setUser
})(MainView);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}