var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "ProfileView", function () {
    return ProfileView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactRedux = require('react-redux');
  var _actionsActions = require('../../actions/actions');
  var _reactRouterDom = require("react-router-dom");
  var _reactBootstrap = require('react-bootstrap');
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrapForm = require("react-bootstrap/Form");
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapCol = require("react-bootstrap/Col");
  var _reactBootstrapColDefault = _parcelHelpers.interopDefault(_reactBootstrapCol);
  var _reactBootstrapRow = require("react-bootstrap/Row");
  var _reactBootstrapRowDefault = _parcelHelpers.interopDefault(_reactBootstrapRow);
  var _urlImgTrashSvg = require('url:../../img/trash.svg');
  var _urlImgTrashSvgDefault = _parcelHelpers.interopDefault(_urlImgTrashSvg);
  require('./profile-view.scss');
  var _jsxFileName = "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx";
  class ProfileView extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
      this.state = {
        validate: null
      };
      this.handleUpdate = this.handleUpdate.bind(this);
      this.deRegister = this.deRegister.bind(this);
    }
    handleUpdate(e, newUsername, newPassword, newEmail, newBirthday) {
      this.setState({
        validated: null
      });
      const form = e.currentTarget;
      if (form.checkValidity() === false) {
        e.preventDefault();
        e.stopPropagation();
        this.setState({
          validated: true
        });
        return;
      }
      e.preventDefault();
      const token = localStorage.getItem('token');
      const user = localStorage.getItem('user');
      const url = 'https://myflix-movie-api-2312.herokuapp.com/users/';
      _axiosDefault.default({
        method: 'put',
        url: url + user,
        headers: {
          Authorization: `Bearer ${token}`
        },
        data: {
          Username: newUsername ? newUsername : this.state.Username,
          Password: newPassword ? newPassword : this.state.Password,
          Email: newEmail ? newEmail : this.state.Email,
          Birthday: newBirthday ? newBirthday : this.state.Birthday
        }
      }).then(response => {
        this.setState({
          Username: response.data.Username,
          Password: response.data.Password,
          Email: response.data.Email,
          Birthday: response.data.Birthday
        });
        alert('Changes have been saved!');
        localStorage.setItem('user', this.state.Username);
      }).catch(function (error) {
        console.log(error);
      });
    }
    setUsername(input) {
      this.Username = input;
    }
    setPassword(input) {
      this.Password = input;
    }
    setEmail(input) {
      this.Email = input;
    }
    setBirthday(input) {
      this.Birthday = input;
    }
    deRegister(e) {
      e.preventDefault();
      const token = localStorage.getItem('token');
      const user = localStorage.getItem('user');
      const url = 'https://myflix-movie-api-2312.herokuapp.com/users/';
      _axiosDefault.default.delete(url + user, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(result => {
        localStorage.clear();
        _actionsActions.setUser({
          user: null,
          token: null
        });
        window.open('/', '_self');
        alert('Your account has been deleted!');
      }).catch(() => {
        console.log('error deleting the user');
      });
    }
    /*removeFavorite(movie) {*/
    /*const token = localStorage.getItem("token");*/
    /*axios*/
    /*.delete("https://myflix-movie-api-2312.herokuapp.com/users/" +*/
    /*localStorage.getItem("user") + "/favorites/" + movie._id,*/
    /*{*/
    /*headers: { Authorization: `Bearer ${token}` },*/
    /*})*/
    /*.then((response) => {*/
    /*console.log(response);*/
    /*// this.componentDidMount();*/
    /*location.reload();*/
    /*alert(movie.Title + " has been removed from your Favorites.");*/
    /*});*/
    /*}*/
    render() {
      const {validated} = this.state;
      const {movies} = this.props;
      const {UsernameError, EmailError, PasswordError, BirthdayError} = this.state;
      const FavoriteMovieList = movies.filter(movie => {
        return this.state.FavoriteMovies.includes(movie._id);
      });
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "flexWrap",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 141,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 142,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
          md: 6,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 143,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          id: "userForm",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 144,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
          noValidate: true,
          validated: validated,
          className: "profile-details-form",
          onSubmit: e => this.handleUpdate(e, this.Username, this.Password, this.Email, this.Birthday),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 146,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h4", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 147,
            columnNumber: 17
          }
        }, "User Profile:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formUsername",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 148,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 149,
            columnNumber: 19
          }
        }, "Username:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "text",
          placeholder: "Enter current or new Username",
          autocomplete: "username",
          onChange: e => this.setUsername(e.target.value),
          pattern: "[a-zA-Z0-9]{5,}",
          minLength: "5",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 150,
            columnNumber: 19
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Text, {
          id: "usernameHelpBlock",
          muted: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 163,
            columnNumber: 19
          }
        }, "Username must be a minimum of 6 characters")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formPassword",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 167,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 168,
            columnNumber: 19
          }
        }, "Password: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          type: "password",
          name: "Password",
          value: this.state.Password,
          onChange: e => this.handleChange(e),
          placeholder: "Change Your Password",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 169,
            columnNumber: 19
          }
        }), Object.keys(PasswordError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 172,
                columnNumber: 23
              }
            }, PasswordError[key])
          );
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Text, {
          id: "passwordHelpBlock",
          muted: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 177,
            columnNumber: 19
          }
        }, "Password must be a minimum of 4 characters")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formEmail",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 181,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 182,
            columnNumber: 19
          }
        }, "Email:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "text",
          name: "Email",
          value: this.state.Email,
          onChange: e => this.handleChange(e),
          placeholder: "john.doe@email.com",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 183,
            columnNumber: 19
          }
        }), Object.keys(EmailError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 186,
                columnNumber: 23
              }
            }, EmailError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formBirthday",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 192,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 193,
            columnNumber: 19
          }
        }, "Brithday:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "date",
          name: "Birthday",
          value: this.state.Birthday,
          onChange: e => this.handleChange(e),
          placeholder: "Update Birthday",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 194,
            columnNumber: 19
          }
        }), Object.keys(BirthdayError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 197,
                columnNumber: 23
              }
            }, BirthdayError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: '`/users/${this.state.Username}`',
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 203,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "outline-warning",
          type: "link",
          block: true,
          onClick: e => this.handleUpdate(e),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 204,
            columnNumber: 19
          }
        }, "Save Changes"))))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
          md: 6,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 214,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          id: "favoriteMovies",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 215,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h4", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 217,
            columnNumber: 15
          }
        }, "Your Favorite Movies:"), FavoriteMovieList.map(movie => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card, {
              id: "card",
              className: "movie-card mb-2",
              text: "white",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 220,
                columnNumber: 19
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Img, {
              variant: "top",
              src: movie.ImagePath,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 221,
                columnNumber: 21
              }
            }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Body, {
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 222,
                columnNumber: 21
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
              to: `/movies/${movie._id}`,
              id: "link",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 223,
                columnNumber: 23
              }
            }, movie.Title), /*#__PURE__*/_reactDefault.default.createElement("button", {
              type: "button",
              className: "btn btn-white btn-rounded mr-md-3 z-depth-1a",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 226,
                columnNumber: 23
              }
            }, /*#__PURE__*/_reactDefault.default.createElement("img", {
              id: "trash-img",
              alt: "",
              src: _urlImgTrashSvgDefault.default,
              width: "20",
              height: "20",
              fluid: "true",
              onClick: () => this.removeFavorite(movie),
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 227,
                columnNumber: 25
              }
            }))))
          );
        })))), /*#__PURE__*/_reactDefault.default.createElement("div", {
          id: "delete-account",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 247,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("br", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 248,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "outline-warning",
          onClick: () => this.handleDelete(),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 249,
            columnNumber: 11
          }
        }, "Delete Account")))
      );
    }
  }
  ProfileView.propType = {
    movies: _propTypesDefault.default.array.isRequired
  };
  const mapStateToProps = state => {
    const {user, movies} = state;
    return {
      user,
      movies
    };
  };
  exports.default = _reactRedux.connect(mapStateToProps, {
    setUser: _actionsActions.setUser
  })(ProfileView);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
