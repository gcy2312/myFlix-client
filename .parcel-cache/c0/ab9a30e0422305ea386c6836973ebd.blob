var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "ProfileView", function () {
    return ProfileView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactRouterDom = require("react-router-dom");
  var _reactBootstrap = require('react-bootstrap');
  var _reactBootstrapContainer = require("react-bootstrap/Container");
  var _reactBootstrapContainerDefault = _parcelHelpers.interopDefault(_reactBootstrapContainer);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrapForm = require("react-bootstrap/Form");
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapCol = require("react-bootstrap/Col");
  var _reactBootstrapColDefault = _parcelHelpers.interopDefault(_reactBootstrapCol);
  var _reactBootstrapRow = require("react-bootstrap/Row");
  var _reactBootstrapRowDefault = _parcelHelpers.interopDefault(_reactBootstrapRow);
  var _jsxFileName = "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx";
  class ProfileView extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
      this.state = {
        Username: "",
        Password: "",
        Email: "",
        Birthday: "",
        FavoriteMovies: [],
        UsernameError: "",
        EmailError: "",
        PasswordError: "",
        BirthdayError: ""
      };
    }
    componentDidMount() {
      let accessToken = localStorage.getItem("token");
      this.getUser(accessToken);
    }
    getUser(token) {
      // console.log(localStorage.getItem("user"));
      const url = "https://myflix-movie-api-2312.herokuapp.com/users/" + localStorage.getItem("user");
      _axiosDefault.default.get(url, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        console.log(response);
        this.setState({
          Username: response.data.Username,
          Password: response.data.Password,
          Email: response.data.Email,
          Birthdate: formattedBirthdate,
          FavoriteMovies: response.data.FavoriteMovies
        });
      }).catch(function (error) {
        console.log(error);
      });
    }
    removeFavorite(movie) {
      const token = localStorage.getItem("token");
      const url = "https://myflix-movie-api-2312.herokuapp.com/users/" + localStorage.getItem("user") + "/movies/" + movie._id;
      _axiosDefault.default.delete(url, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        console.log(response);
        this.componentDidMount();
        // location.reload();
        alert(movie.Title + " has been removed from your Favorites.");
      });
    }
    handleDelete() {
      const token = localStorage.getItem("token");
      const user = localStorage.getItem("user");
      _axiosDefault.default.delete(`https://myflix-movie-api-2312.herokuapp.com/users/${user}`, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(() => {
        alert(user + " has been deleted.");
        localStorage.removeItem("user");
        localStorage.removeItem("token");
        window.location.pathname = "/";
      }).catch(function (error) {
        console.log(error);
      });
    }
    handleUpdate(e) {
      let token = localStorage.getItem("token");
      let user = localStorage.getItem("user");
      console.log(this.state);
      let setisValid = this.formValidation();
      if (setisValid) {
        _axiosDefault.default.put(`https://myflix-movie-api-2312.herokuapp.com/users/${user}`, {
          Username: this.state.Username,
          Password: this.state.Password,
          Email: this.state.Email,
          Birthday: this.state.Birthday
        }, {
          headers: {
            Authorization: `Bearer ${token}`
          }
        }).then(response => {
          const data = response.data;
          localStorage.setItem("user", data.Username);
          console.log(data);
          alert(user + " has been updated.");
          console.log(response);
        }).catch(function (error) {
          console.log(error.response.data);
        });
      }
    }
    formValidation() {
      let UsernameError = {};
      let EmailError = {};
      let PasswordError = {};
      let BirthdayError = {};
      let isValid = true;
      if (this.state.Username.trim().length < 5) {
        UsernameError.usernameShort = "Must be alphanumeric and contains at least 5 characters";
        isValid = false;
      }
      if (this.state.Password.trim().length < 3) {
        PasswordError.passwordMissing = "You must enter a password.(minimum 4 characters) ";
        isValid = false;
      }
      if (!(this.state.Email && this.state.Email.includes(".") && this.state.Email.includes("@"))) {
        EmailError.emailNotEmail = "A valid email address is required.";
        isValid = false;
      }
      if (this.state.birthday === '') {
        BirthdayError.birthdayEmpty = "Please enter your birthday.";
        isValid = false;
      }
      this.setState({
        UsernameError: UsernameError,
        PasswordError: PasswordError,
        EmailError: EmailError,
        // ConfirmPasswordError: ConfirmPasswordError,
        BirthdayError: BirthdayError
      });
      return isValid;
    }
    handleChange(e) {
      let {name, value} = e.target;
      // console.log(name, value);
      this.setState({
        [name]: value
      });
    }
    render() {
      const {movies} = this.props;
      const {UsernameError, EmailError, PasswordError, BirthdayError} = this.state;
      const FavoriteMovieList = movies.filter(movie => {
        return this.state.FavoriteMovies.includes(movie._id);
      });
      // console.log(favoriteMovieList);
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "userProfile",
          style: {
            display: "flex"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 172,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapContainerDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 173,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          className: "justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 174,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
          md: 12,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 175,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
          className: "justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 176,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
          style: {
            textAlign: "center"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 177,
            columnNumber: 17
          }
        }, "Profile Details"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formUsername",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 178,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 179,
            columnNumber: 19
          }
        }, "Username: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          size: "sm",
          type: "text",
          name: "Username",
          value: this.state.Username,
          onChange: e => this.handleChange(e),
          placeholder: "Change username",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 180,
            columnNumber: 19
          }
        }), Object.keys(UsernameError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 184,
                columnNumber: 23
              }
            }, UsernameError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formPassword",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 190,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 191,
            columnNumber: 19
          }
        }, "Password: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          size: "sm",
          type: "password",
          name: "Password",
          value: this.state.Password,
          onChange: e => this.handleChange(e),
          placeholder: "Change your password",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 192,
            columnNumber: 19
          }
        }), Object.keys(PasswordError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 196,
                columnNumber: 23
              }
            }, PasswordError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formEmail",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 202,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 203,
            columnNumber: 19
          }
        }, "Email: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          size: "sm",
          type: "email",
          name: "Email",
          value: this.state.Email,
          onChange: e => this.handleChange(e),
          placeholder: "Change Email",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 204,
            columnNumber: 19
          }
        }), Object.keys(EmailError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 208,
                columnNumber: 23
              }
            }, EmailError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "formBirthday",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 215,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 216,
            columnNumber: 19
          }
        }, "Date of Birth: "), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.FormControl, {
          size: "sm",
          type: "date",
          name: "Birthday",
          value: this.state.Birthday,
          onChange: e => this.handleChange(e),
          placeholder: "Change Birthday",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 217,
            columnNumber: 19
          }
        }), Object.keys(BirthdayError).map(key => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: key,
              style: {
                color: "red"
              },
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 221,
                columnNumber: 23
              }
            }, BirthdayError[key])
          );
        })), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/users/${this.state.Username}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 228,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          className: "mb-2",
          variant: "dark",
          type: "link",
          size: "md",
          block: true,
          onClick: e => this.handleUpdate(e),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 229,
            columnNumber: 19
          }
        }, "Save changes")), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 238,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          className: "mb-2",
          variant: "primary",
          type: "submit",
          size: "md",
          block: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 239,
            columnNumber: 19
          }
        }, "Back to Main")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          className: "mb-2",
          variant: "danger",
          size: "md",
          block: true,
          onClick: () => this.handleDelete(),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 248,
            columnNumber: 17
          }
        }, "Delete Account")), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "favoriteMovies",
          style: {
            float: "center",
            textAlign: "center"
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 257,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Text, {
          className: "mt-200",
          as: "h3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 264,
            columnNumber: 17
          }
        }, "Your Favorite Movies:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          className: "mb-20",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 265,
            columnNumber: 17
          }
        }, FavoriteMovieList.map(movie => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
              md: 3,
              key: movie._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 268,
                columnNumber: 23
              }
            }, /*#__PURE__*/_reactDefault.default.createElement("div", {
              key: movie._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 269,
                columnNumber: 25
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card, {
              className: "mb-20",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 270,
                columnNumber: 27
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Img, {
              variant: "top",
              src: movie.ImagePath,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 271,
                columnNumber: 29
              }
            }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Body, {
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 272,
                columnNumber: 29
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
              to: `/movies/${movie._id}`,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 273,
                columnNumber: 31
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Title, {
              as: "h6",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 274,
                columnNumber: 33
              }
            }, movie.Title)))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
              className: "mb-30",
              onClick: () => this.removeFavorite(movie),
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 278,
                columnNumber: 27
              }
            }, "Remove")))
          );
        })))))))
      );
    }
  }
  ProfileView.propTypes = {
    movies: _propTypesDefault.default.array.isRequired
  };
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
