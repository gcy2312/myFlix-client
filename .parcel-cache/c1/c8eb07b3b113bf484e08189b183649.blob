var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MainView", function () {
    return MainView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactRedux = require('react-redux');
  var _reactRouterDom = require("react-router-dom");
  var _actionsActions = require('../../actions/actions');
  var _moviesListMoviesList = require('../movies-list/movies-list');
  var _moviesListMoviesListDefault = _parcelHelpers.interopDefault(_moviesListMoviesList);
  var _loginViewLoginView = require('../login-view/login-view');
  var _registrationViewRegistrationView = require('../registration-view/registration-view');
  require('../movie-card/movie-card');
  var _movieViewMovieView = require('../movie-view/movie-view');
  var _directorViewDirectorView = require('../director-view/director-view');
  var _genreViewGenreView = require('../genre-view/genre-view');
  var _profileViewProfileView = require('../profile-view/profile-view');
  var _reactBootstrapRow = require('react-bootstrap/Row');
  var _reactBootstrapRowDefault = _parcelHelpers.interopDefault(_reactBootstrapRow);
  var _reactBootstrapCol = require('react-bootstrap/Col');
  var _reactBootstrapColDefault = _parcelHelpers.interopDefault(_reactBootstrapCol);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrap = require('react-bootstrap');
  require('./main-view.scss');
  var _urlImgVideoSvg = require('url:../../img/video.svg');
  var _urlImgVideoSvgDefault = _parcelHelpers.interopDefault(_urlImgVideoSvg);
  var _jsxFileName = "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\main-view\\main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
      this.state = {
        user: null,
        register: false
      };
    }
    componentDidMount() {
      let accessToken = localStorage.getItem('token');
      if (accessToken !== null) {
        this.setState({
          user: localStorage.getItem('user')
        });
        this.getMovies(accessToken);
      }
    }
    getMovies(token) {
      _axiosDefault.default.get('https://myflix-movie-api-2312.herokuapp.com/movies', {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        this.props.setMovies(response.data);
      }).catch(function (error) {
        console.log(error);
      });
    }
    /*when user successfully logs in - function updates 'user' property in state to that particular user - keep authData in localStorage//*/
    onLoggedIn(authData) {
      console.log(authData);
      this.props.setUser(authData);
      this.setState({
        user: authData.user.Username
      });
      localStorage.setItem('token', authData.token);
      localStorage.setItem('user', authData.user.Username);
      this.getMovies(authData.token);
    }
    onLoggedOut() {
      localStorage.removeItem('token');
      localStorage.removeItem('user');
      this.setState({
        user: null
      });
    }
    /*need to add Button for log out : onClick={()={this.onLoggedOut()}}*/
    /*when user successfully regsiters - function updates 'user property in state to that partcular user//*/
    onRegister(register) {
      this.setState({
        register
      });
    }
    /*onBackClick() {*/
    /*this.setState({*/
    /*selectedMovie: null*/
    /*});*/
    /*}*/
    /*toggleRegister = (e) => {*/
    /*this.setState({*/
    /*register: !this.state.register*/
    /*})*/
    /*}*/
    render() {
      let {movies} = this.props;
      let {user} = this.state;
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 108,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "main-view justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 109,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar, {
          className: "mb-5",
          id: "myFlixNav",
          variant: "dark",
          expand: "lg",
          sticky: "top",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 110,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Brand, {
          id: "appName",
          href: "#home",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 112,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("img", {
          alt: "",
          src: _urlImgVideoSvgDefault.default,
          width: "50",
          height: "50",
          className: "d-inline-block align-top",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 113,
            columnNumber: 15
          }
        }), ' ', "myFlix"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Toggle, {
          id: "toggle",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 121,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Collapse, {
          id: "toggle",
          className: "justify-content-end",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 122,
            columnNumber: 13
          }
        }, !user ? /*#__PURE__*/_reactDefault.default.createElement("ul", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 124,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: '/',
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 125,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          id: "link",
          variant: "link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 126,
            columnNumber: 21
          }
        }, "Log In")), " ", '', /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: '/register',
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 128,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          id: "link",
          variant: "link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 129,
            columnNumber: 21
          }
        }, "Register"))) : /*#__PURE__*/_reactDefault.default.createElement("ul", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 133,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: '/users/${users}',
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 134,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          id: "link",
          variant: "link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 135,
            columnNumber: 21
          }
        }, "My Account")), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: '/',
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 137,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          id: "link",
          variant: "link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 138,
            columnNumber: 21
          }
        }, "Movies")), '', /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: '/',
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 140,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          id: "logout",
          variant: "outline-warning",
          onClick: () => this.onLoggedOut(),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 141,
            columnNumber: 21
          }
        }, "Log Out"))))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          className: "main-view justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 148,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/",
          render: () => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 150,
                  columnNumber: 33
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 151,
                  columnNumber: 17
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 153,
                  columnNumber: 47
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_moviesListMoviesListDefault.default, {
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 154,
                  columnNumber: 22
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 149,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/register",
          render: () => {
            if (user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Redirect, {
                to: "/",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 158,
                  columnNumber: 32
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 159,
                  columnNumber: 22
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
                onRegister: register => this.onRegister(register),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 160,
                  columnNumber: 17
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 157,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/movies/:movieId",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 166,
                  columnNumber: 24
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                toggleRegister: this.toggleRegister,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 167,
                  columnNumber: 19
                }
              }))
            );
            if (!movies) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 169,
                  columnNumber: 35
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 170,
                  columnNumber: 22
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieView.MovieView, {
                movie: movies.find(m => m._id === match.params.movieId),
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 171,
                  columnNumber: 17
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 164,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/genres/:name",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 177,
                  columnNumber: 24
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 178,
                  columnNumber: 19
                }
              }))
            );
            if (!movies) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 180,
                  columnNumber: 35
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 5,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 181,
                  columnNumber: 22
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_genreViewGenreView.GenreView, {
                genre: movies.find(m => m.Genre.Name === match.params.name).Genre,
                movies: movies,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 182,
                  columnNumber: 17
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 175,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/directors/:name",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 192,
                  columnNumber: 24
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                toggleRegister: this.toggleRegister,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 193,
                  columnNumber: 19
                }
              }))
            );
            if (!movies) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 195,
                  columnNumber: 35
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 196,
                  columnNumber: 22
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_directorViewDirectorView.DirectorView, {
                director: movies.find(m => m.Director.Name === match.params.name).Director,
                movies: movies,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 197,
                  columnNumber: 17
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 190,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/users/:username",
          render: ({history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 12,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 207,
                  columnNumber: 24
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                toggleRegister: this.toggleRegister,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 208,
                  columnNumber: 19
                }
              }))
            );
            if (!movies) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 210,
                  columnNumber: 35
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 211,
                  columnNumber: 22
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_profileViewProfileView.ProfileView, {
                user: user,
                movies: movies,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 212,
                  columnNumber: 17
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 205,
            columnNumber: 13
          }
        }))))
      );
    }
  }
  let mapStateToProps = state => {
    return {
      movies: state.movies
    };
  };
  exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actionsActions.setMovies
  })(MainView);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
