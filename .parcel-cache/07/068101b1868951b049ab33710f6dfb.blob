var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MovieCard", ()=>MovieCard
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _card = require("react-bootstrap/Card");
var _cardDefault = parcelHelpers.interopDefault(_card);
var _reactRouterDom = require("react-router-dom");
var _reactRedux = require("react-redux");
var _actions = require("../../actions/actions");
var _heartSvg = require("url:../../img/heart.svg");
var _heartSvgDefault = parcelHelpers.interopDefault(_heartSvg);
var _movieCardScss = require("./movie-card.scss");
class MovieCard extends _reactDefault.default.Component {
    constructor(props){
        super(props);
        this.state = {
        };
    }
    handleAdd() {
        const token = localStorage.getItem("token");
        const user = localStorage.getItem("user");
        _axiosDefault.default.post(`https://myflix-movie-api-2312.herokuapp.com/users/${user}` + "/favorites/" + this.props.movie._id, {
        }, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            console.log(response);
            alert(this.props.movie.Title + " has been added to your Favorites List.");
            this.props.setUser(response.data);
        });
    }
    render() {
        const { movie , setUser  } = this.props;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default, {
            id: "card",
            className: "movie-card mb-2",
            text: "white",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\movie-card\\movie-card.jsx",
                lineNumber: 41
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default.Img, {
            variant: "top",
            src: movie.ImagePath,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\movie-card\\movie-card.jsx",
                lineNumber: 42
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default.Body, {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\movie-card\\movie-card.jsx",
                lineNumber: 43
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default.Title, {
            id: "card-title",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\movie-card\\movie-card.jsx",
                lineNumber: 44
            },
            __self: this
        }, movie.Title), /*#__PURE__*/ _reactDefault.default.createElement(_cardDefault.default.Text, {
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\movie-card\\movie-card.jsx",
                lineNumber: 45
            },
            __self: this
        }, movie.Description.slice(0, 75), "..."), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/movies/${movie._id}`,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\movie-card\\movie-card.jsx",
                lineNumber: 46
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
            id: "openMovie",
            variant: "outline-light",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\movie-card\\movie-card.jsx",
                lineNumber: 47
            },
            __self: this
        }, "Open")), /*#__PURE__*/ _reactDefault.default.createElement("button", {
            type: "button",
            className: "btn btn-white btn-rounded mr-md-3 z-depth-1a",
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\movie-card\\movie-card.jsx",
                lineNumber: 49
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement("img", {
            id: "heart-img",
            alt: "",
            src: _heartSvgDefault.default,
            width: "20",
            height: "20",
            fluid: "true",
            onClick: ()=>this.handleAdd(movie)
            ,
            __source: {
                fileName: "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\movie-card\\movie-card.jsx",
                lineNumber: 50
            },
            __self: this
        })))));
    }
}
let mapStateToProps = (state)=>{
    return {
        movies: state.movies,
        user: state.user
    };
};
exports.default = _reactRedux.connect(mapStateToProps, {
    setUser: _actions.setUser
})(MovieCard);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}