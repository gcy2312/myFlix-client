var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "ProfileView", function () {
    return ProfileView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  require('react-redux');
  require('../../actions/actions');
  var _reactRouterDom = require("react-router-dom");
  var _reactBootstrap = require('react-bootstrap');
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrapForm = require("react-bootstrap/Form");
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapCol = require("react-bootstrap/Col");
  var _reactBootstrapColDefault = _parcelHelpers.interopDefault(_reactBootstrapCol);
  var _reactBootstrapRow = require("react-bootstrap/Row");
  var _reactBootstrapRowDefault = _parcelHelpers.interopDefault(_reactBootstrapRow);
  var _urlImgTrashSvg = require('url:../../img/trash.svg');
  var _urlImgTrashSvgDefault = _parcelHelpers.interopDefault(_urlImgTrashSvg);
  require('./profile-view.scss');
  var _jsxFileName = "C:\\Users\\gmacy\\.vscode\\myFlix-client\\src\\components\\profile-view\\profile-view.jsx";
  class ProfileView extends _reactDefault.default.Component {
    constructor(props) {
      super(props);
      this.state = {
        validated: null
      };
      console.log('Profile View Loaded');
      this.handleUpdate = this.handleUpdate.bind(this);
    }
    removeFavorite(movie) {
      const token = localStorage.getItem("token");
      _axiosDefault.default.delete("https://myflix-movie-api-2312.herokuapp.com/users/" + localStorage.getItem("user") + "/favorites/" + movie._id, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        console.log(response);
        location.reload();
        alert(movie.Title + " has been removed from your Favorites.");
      });
    }
    handleDelete() {
      const token = localStorage.getItem("token");
      const user = localStorage.getItem("user");
      _axiosDefault.default.delete(`https://myflix-movie-api-2312.herokuapp.com/users/${user}`, {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(() => {
        alert(user + " account has been deleted.");
        localStorage.removeItem("user");
        localStorage.removeItem("token");
        window.location.pathname = "/";
      }).catch(function (error) {
        console.log(error);
      });
    }
    handleUpdate(e, newUsername, newPassword, newEmail, newBirthday) {
      this.setState({
        validated: null
      });
      const form = e.currentTarget;
      if (form.checkValidity() === false) {
        e.preventDefault();
        e.stopPropagation();
        this.setState({
          validated: true
        });
        return;
      }
      e.preventDefault();
      const token = localStorage.getItem('token');
      const user = localStorage.getItem('user');
      const url = 'https://myflix-movie-api-2312.herokuapp.com/users/';
      _axiosDefault.default({
        method: 'put',
        url: url + user,
        headers: {
          Authorization: `Bearer ${token}`
        },
        data: {
          Username: newUsername ? newUsername : this.state.Username,
          Password: newPassword ? newPassword : this.state.Password,
          Email: newEmail ? newEmail : this.state.Email,
          Birthday: newBirthday ? newBirthday : this.state.Birthday
        }
      }).then(response => {
        this.setState({
          Username: response.data.Username,
          Password: response.data.Password,
          Email: response.data.Email,
          Birthday: response.data.Birthday
        });
        alert('Changes have been saved!');
        localStorage.setItem('user', this.state.Username);
      }).catch(function (error) {
        console.log(error);
      });
    }
    setUsername(input) {
      this.Username = input;
    }
    setPassword(input) {
      this.Password = input;
    }
    setEmail(input) {
      this.Email = input;
    }
    setBirthday(input) {
      this.Birthday = input;
    }
    /*handleUpdate(e) {*/
    /*let token = localStorage.getItem("token");*/
    /*let user = localStorage.getItem("user");*/
    /*// console.log(this.state);*/
    /*let setisValid = this.formValidation();*/
    /*if (setisValid) {*/
    /*axios.put(`https://myflix-movie-api-2312.herokuapp.com/users/${user}`, {*/
    /*Username: user.Username,*/
    /*Password: user.Password,*/
    /*Email: user.Email,*/
    /*Birthday: user.Birthday*/
    /*},*/
    /*{*/
    /*headers: { Authorization: `Bearer ${token}` }*/
    /*})*/
    /*.then((response) => {*/
    /*const data = response.data;*/
    /*localStorage.setItem("user", data.user);*/
    /*console.log(data);*/
    /*alert(user + "account has been updated.");*/
    /*console.log(res);*/
    /*})*/
    /*.catch(function (err) {*/
    /*console.log(err.response.data);*/
    /*});*/
    /*}*/
    /*}*/
    /*formValidation(user) {*/
    /*let UsernameError = {};*/
    /*let EmailError = {};*/
    /*let PasswordError = {};*/
    /*let BirthdayError = {};*/
    /*let isValid = true;*/
    /*if (user.Username.trim().length < 5) {*/
    /*UsernameError.usernameShort = "Username be alphanumeric characters only and contains at least 5 characters";*/
    /*isValid = false;*/
    /*}*/
    /*if (user.Password.trim().length < 3) {*/
    /*PasswordError.passwordMissing = "You must enter a password.(minimum 4 characters) ";*/
    /*isValid = false;*/
    /*}*/
    /*if (!(user.Email && user.Email.includes(".") && user.Email.includes("@"))) {*/
    /*EmailError.emailNotEmail = "A valid email address is required.";*/
    /*isValid = false;*/
    /*}*/
    /*if (user.birthday === '') {*/
    /*BirthdayError.birthdayEmpty = "Please enter your birthday.";*/
    /*isValid = false;*/
    /*}*/
    /*this.setState({*/
    /*UsernameError: UsernameError,*/
    /*PasswordError: PasswordError,*/
    /*EmailError: EmailError,*/
    /*// ConfirmPasswordError: ConfirmPasswordError,*/
    /*BirthdayError: BirthdayError,*/
    /*})*/
    /*return isValid;*/
    /*};*/
    /*handleChange(e) {*/
    /*let { name, value } = e.target;*/
    /*this.setState({*/
    /*[name]: value*/
    /*})*/
    /*}*/
    render() {
      const {movies, user} = this.props;
      console.log("render ProfileView", user);
      const FavoriteMovieList = movies.filter(movie => {
        return user.FavoriteMovies.includes(movie._id);
      });
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "flexWrap",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 202,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 203,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
          md: 6,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 204,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 205,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card, {
          className: "profile-details-form",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 206,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Body, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 207,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
          noValidate: true,
          validated: validated,
          className: "update-form",
          onSubmit: e => this.handleUpdate(e, this.Username, this.Password, this.Email, this.Birthday),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 208,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          className: "justify-content-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 209,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
          xs: 10,
          md: 8,
          lg: 6,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 210,
            columnNumber: 23
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h5", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 211,
            columnNumber: 25
          }
        }, "Update your Profile"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "BasicUsername",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 212,
            columnNumber: 25
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 213,
            columnNumber: 27
          }
        }, "Username:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "text",
          placeholder: "Enter current or new Username",
          autoComplete: "username",
          onChange: e => this.setUsername(e.target.value),
          pattern: "[a-zA-Z0-9]{5,}",
          minLength: "5",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 214,
            columnNumber: 27
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control.Feedback, {
          type: "invalid",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 220,
            columnNumber: 27
          }
        }, "Enter a Username with at least 5 alphanumeric characters")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "BasicPassword",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 222,
            columnNumber: 25
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 223,
            columnNumber: 27
          }
        }, "Password:*"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "password",
          placeholder: "Enter current or new Password",
          autoComplete: "password",
          onChange: e => this.setPassword(e.target.value),
          minLength: "5",
          required: true,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 224,
            columnNumber: 27
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control.Feedback, {
          type: "invalid",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 228,
            columnNumber: 27
          }
        }, "Enter a valid password with at least 5 characters")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "BasicEmail",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 230,
            columnNumber: 25
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 231,
            columnNumber: 27
          }
        }, "Email:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "email",
          placeholder: "Change email",
          autoComplete: "email",
          onChange: e => this.setEmail(e.target.value),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 232,
            columnNumber: 27
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control.Feedback, {
          type: "invalid",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 236,
            columnNumber: 27
          }
        }, "Please enter a valid email address.")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
          controlId: "BasicBirthday",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 238,
            columnNumber: 25
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 239,
            columnNumber: 27
          }
        }, "Birthday:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
          type: "date",
          onChange: e => this.setBirthday(e.target.value),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 240,
            columnNumber: 27
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control.Feedback, {
          type: "invalid",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 242,
            columnNumber: 27
          }
        }, "Please enter a valid date.")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "secondary",
          type: "submit",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 244,
            columnNumber: 25
          }
        }, "Update"), /*#__PURE__*/_reactDefault.default.createElement("hr", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 244,
            columnNumber: 82
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "secondary",
          className: "my-2",
          onClick: () => {
            onBackClick(null);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 245,
            columnNumber: 25
          }
        }, "Back"), /*#__PURE__*/_reactDefault.default.createElement("p", {
          className: "my-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 246,
            columnNumber: 25
          }
        }, "Deregister Account: - Cannot be undone!"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
          variant: "danger",
          onClick: e => this.deRegister(e),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 247,
            columnNumber: 25
          }
        }, "Deregister")))))))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
          md: 6,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 320,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          id: "favoriteMovies",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 321,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h4", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 323,
            columnNumber: 15
          }
        }, "Your Favorite Movies:"), FavoriteMovieList.map(movie => {
          return (
            /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card, {
              id: "card",
              className: "movie-card mb-2",
              text: "white",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 326,
                columnNumber: 19
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Img, {
              variant: "top",
              src: movie.PosterPath,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 327,
                columnNumber: 21
              }
            }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Card.Body, {
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 328,
                columnNumber: 21
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
              to: `/movies/${movie._id}`,
              id: "link",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 329,
                columnNumber: 23
              }
            }, movie.Title), /*#__PURE__*/_reactDefault.default.createElement("button", {
              type: "button",
              className: "btn btn-white btn-rounded mr-md-3 z-depth-1a",
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 332,
                columnNumber: 23
              }
            }, /*#__PURE__*/_reactDefault.default.createElement("img", {
              id: "trash-img",
              alt: "",
              src: _urlImgTrashSvgDefault.default,
              width: "20",
              height: "20",
              fluid: "true",
              onClick: () => this.removeFavorite(movie),
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 333,
                columnNumber: 25
              }
            }))))
          );
        })))))
      );
    }
  }
  ProfileView.propType = {
    movies: _propTypesDefault.default.array.isRequired
  };
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
